# This workflow installs the latest version of Terraform CLI
# On pull request events, this workflow will run `terraform init`, `terraform fmt`, and `terraform plan`. 
# On push events to the "master" branch, `terraform apply` will be executed.

name: 'Terraform'

on:
  push:
    branches: [ "develop" ]
permissions:
  id-token: write
  contents: read

defaults:
  run:
    working-directory: .github/workflows
jobs:
  terraform:
    name: Terraform Workflow
    runs-on: ubuntu-latest

    steps:
    # Checkout the repository
    - name: Checkout Code
      uses: actions/checkout@v3

    # Set up Terraform
    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.5.5 # Replace with your Terraform version
        # cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }} # Optional if using Terraform Cloud

    
    - name: Azure Login
      uses: azure/login@v2
      with:
        creds: ${{secrets.AZURE_CREDENTIALS}}
        # client-id: ${{ secrets.AZURE_CLIENT_ID }}
        # tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        # allow-no-subscriptions: true
        # enable-AzPSSession: true
       

      # Set environment variables for Terraform
    - name: Set Terraform Environment Variables
      run: |
        echo "ARM_CLIENT_ID=${{ secrets.AZURE_CLIENT_ID }}" >> $GITHUB_ENV
        echo "ARM_CLIENT_SECRET=${{ secrets.AZURE_CLIENT_SECRET }}" >> $GITHUB_ENV
        echo "ARM_TENANT_ID=${{ secrets.AZURE_TENANT_ID }}" >> $GITHUB_ENV
        echo "ARM_SUBSCRIPTION_ID=${{ secrets.AZURE_SUBSCRIPTION_ID }}" >> $GITHUB_ENV

    # Terraform Init
    - name: Terraform Init
      run: terraform init
      
    # Terraform Plan
    - name: Terraform Plan
      run: terraform plan -out=tfplan  
    # Terraform Apply
    - name: Terraform Apply
      if: github.event_name == 'push'
      run: terraform apply -auto-approve tfplan  
